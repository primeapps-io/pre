@using PrimeApps.Model.Common.Organization
@{
    var organizations = ViewBag.Organizations as List<OrganizationModel>;
    var apps = organizations?.FirstOrDefault(x => x.Id == int.Parse(ViewBag.ActiveOrganizationId))?.Apps;
    var currentApp = ViewBag.CurrentApp;
}
<div class="header bg-gradient-primary pb-8 pt-5 pt-md-8">
    <div class="container-fluid">
        <div class="header-body">
            @if (ViewBag.lastPackage != null)
            {
                <div class="row">
                    <div class="col-xl-5 col-lg-10 b-card">
                        <div class="card card-stats mb-4 mb-xl-0">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col">
                                        <h5 class="card-title text-uppercase text-muted mb-0">Application Name</h5>
                                        <span class="h2 font-weight-bold mb-0">@ViewBag.CurrentApp.Label</span>
                                        <p class="mt-3 mb-0 text-muted text-sm">
                                            <span class="text-nowrap">
                                                Last Release Version :
                                            </span>
                                            <span class="text-success mr-2"> @ViewBag.lastPackage.Version</span>

                                        </p>
                                    </div>
                                    <div class="col-auto">
                                        <button class="btn btn-icon btn-3 btn-primary btn-lg" type="button" title="Click for Publish!" onclick="publish(@ViewBag.lastPackage.Id,@ViewBag.CurrentApp.Id,@ViewBag.ActiveOrganizationId);">
                                            <span class="btn-inner--icon"><i class="ni ni-cloud-upload-96"></i></span>

                                            <span class="btn-inner--text">Publish</span>

                                        </button>
                                        @*<div class="icon icon-shape text-white rounded-circle shadow" style="background-color:orange">
                                                <i class="ni ni-cloud-upload-96" title="Publish"></i>
                                            </div>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="log" hidden>
                    <div class="col-xl-5 col-lg-10 b-card">
                        <div class="card card-stats mb-4 mb-xl-0">
                            <div class="card-body">
                                <div class="tab-content table-responsive">
                                    <pre style="color: white !important; padding-left: 10px !important; padding-top: 10px !important; padding-bottom: 10px !important; background-color: black !important;" data-ng-bind-html="goLive.logs" id="logData"></pre>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    var logData = document.getElementById('logData');
    var logEditor = document.getElementById('log');
    var log = '';
    var goLive = {};
    logData.innerHTML = log;

    function publish(packageId, appId,orgId) {
        if (!packageId || !appId)
            return;

        console.log('Package:' + packageId + ' App:' + appId);


        var http = new XMLHttpRequest();
        http.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                logData.innerHTML = this.responseText;
            }
        };

        http.open('GET', window.location.origin + '/log?id=' + packageId + '&appId=' + appId + '&orgId=' + orgId, true);
        http.setRequestHeader("Content-Type", 'application/json');
        http.send();

        logEditor.hidden = false;

    }

    function openWS(id) {
        //if ($scope.socket && $scope.socket.readyState !== WebSocket.CLOSED)
        //    return;

        var socket = new WebSocket('ws://' + location.host + '/log_stream');
        socket.onopen = function(e) {
            socket.send(JSON.stringify({
                'X-App-Id': @ViewBag.CurrentApp.Id,
                'X-Tenant-Id': 1,
                'X-Organization-Id': @ViewBag.ActiveOrganizationId,
                'release_id': id
            }));
        };

        socket.onclose = function(e) {
            if (goLive && goLive.logs && goLive.logs.indexOf('********** Package Created **********') > -1) {
                //toastr.success("Your package is ready.");

                goLive.status = false;
            }
            /*else if ($scope.type === 'publish' || $rootScope.goLive.logs.contains('********** Publish End**********')) {
                toastr.success("Publish completed successfully.");
                $rootScope.currentApp.status = "published";
                $rootScope.goLive.status = false;
                $scope.$apply();
            }*/

        };

        socket.onerror = function(e) {
            //$scope.publishError = e.data;
            //$scope.$apply();
            console.log(e);
            //toastr.error($filter('translate')('Common.Error'));
            //$scope.loading = false;
        };

        socket.onmessage = function(e) {
            logEditor.hidden = false;
            goLive.logs = e.data;
            logData.innerHTML = e.data;
        };
    };

</script>