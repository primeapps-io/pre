<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebOptimizer.Core</name>
    </assembly>
    <members>
        <member name="T:WebOptimizer.AssetExtensions">
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
        </member>
        <member name="M:WebOptimizer.AssetExtensions.GetFileProvider(WebOptimizer.IAsset,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Gets the file provider.
            </summary>
        </member>
        <member name="M:WebOptimizer.AssetExtensions.GetFileProvider(WebOptimizer.IAsset,Microsoft.AspNetCore.Hosting.IHostingEnvironment,System.String,System.String@)">
            <summary>
            Gets the file provider.
            </summary>
        </member>
        <member name="T:WebOptimizer.AssetBuilder">
            <summary>
            A class for building assets.
            </summary>
            <seealso cref="T:WebOptimizer.IAssetBuilder" />
        </member>
        <member name="M:WebOptimizer.AssetBuilder.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,WebOptimizer.IAssetResponseStore,Microsoft.Extensions.Logging.ILogger{WebOptimizer.AssetBuilder},Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:WebOptimizer.AssetBuilder"/> class.
            </summary>
        </member>
        <member name="M:WebOptimizer.AssetBuilder.BuildAsync(WebOptimizer.IAsset,Microsoft.AspNetCore.Http.HttpContext,WebOptimizer.IWebOptimizerOptions)">
            <summary>
            Builds an asset by running it through all the processors.
            </summary>
        </member>
        <member name="T:WebOptimizer.ByteExtensions">
            <summary>
            Extension methods for making it easier to work with streams.
            </summary>
        </member>
        <member name="M:WebOptimizer.ByteExtensions.AsString(System.Byte[])">
            <summary>
            Converts the byte array to a string
            </summary>
        </member>
        <member name="M:WebOptimizer.ByteExtensions.AsByteArray(System.String)">
            <summary>
            Converts a string into a byte array.
            </summary>
        </member>
        <member name="M:WebOptimizer.ByteExtensions.AsBytesAsync(System.IO.Stream)">
            <summary>
            Converts a stream to a byte array
            </summary>
        </member>
        <member name="M:WebOptimizer.FileVersionProvider.#ctor(Microsoft.Extensions.FileProviders.IFileProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.AspNetCore.Http.PathString)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.FileVersionProvider"/>.
            </summary>
            <param name="fileProvider">The file provider to get and watch files.</param>
            <param name="cache"><see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache"/> where versioned urls of files are cached.</param>
            <param name="requestPathBase">The base path for the current HTTP request.</param>
        </member>
        <member name="M:WebOptimizer.FileVersionProvider.AddFileVersionToPath(System.String)">
            <summary>
            Adds version query parameter to the specified file path.
            </summary>
            <param name="path">The path of the file to which version should be added.</param>
            <returns>Path containing the version query string.</returns>
            <remarks>
            The version query string is appended with the key "v".
            </remarks>
        </member>
        <member name="T:WebOptimizer.IAsset">
            <summary>
            An interface for describing a bundle.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAsset.ContentType">
            <summary>
            Gets the content type produced by the transform.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAsset.Processors">
            <summary>
            Gets a list of processors
            </summary>
        </member>
        <member name="P:WebOptimizer.IAsset.Items">
            <summary>
            Gets the items collection for the asset.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAsset.Route">
            <summary>
            Gets the route to the bundle output.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAsset.SourceFiles">
            <summary>
            Gets the webroot relative source files.
            </summary>
        </member>
        <member name="M:WebOptimizer.IAsset.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext,WebOptimizer.IWebOptimizerOptions)">
            <summary>
            Executes the processors and returns the modified content.
            </summary>
        </member>
        <member name="M:WebOptimizer.IAsset.GenerateCacheKey(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the cache key associated with this version of the asset.
            </summary>
        </member>
        <member name="T:WebOptimizer.IAssetBuilder">
            <summary>
            A class for building a asset.
            </summary>
        </member>
        <member name="M:WebOptimizer.IAssetBuilder.BuildAsync(WebOptimizer.IAsset,Microsoft.AspNetCore.Http.HttpContext,WebOptimizer.IWebOptimizerOptions)">
            <summary>
            Builds an asset by running it through all the processors.
            </summary>
        </member>
        <member name="T:WebOptimizer.IAssetContext">
            <summary>
            The context used to perform processing to <see cref="T:WebOptimizer.IAsset"/> instances.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAssetContext.Asset">
            <summary>
            Gets the transform.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAssetContext.Content">
            <summary>
            Gets or sets the content of the response.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAssetContext.HttpContext">
            <summary>
            Gets the HTTP context.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAssetContext.Options">
            <summary>
            Gets the global options for WebOptimizer.
            </summary>
        </member>
        <member name="T:WebOptimizer.IAssetPipeline">
            <summary>
            The web optimization pipeline
            </summary>
        </member>
        <member name="P:WebOptimizer.IAssetPipeline.Assets">
            <summary>
            Gets the assets registered on the pipeline.
            </summary>
        </member>
        <member name="M:WebOptimizer.IAssetPipeline.AddBundle(WebOptimizer.IAsset)">
            <summary>
            Adds an <see cref="T:WebOptimizer.IAsset"/> to the optimization pipeline.
            </summary>
        </member>
        <member name="M:WebOptimizer.IAssetPipeline.AddBundle(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset})">
            <summary>
            Adds an array of <see cref="T:WebOptimizer.IAsset"/> to the optimization pipeline.
            </summary>
        </member>
        <member name="M:WebOptimizer.IAssetPipeline.AddBundle(System.String,System.String,System.String[])">
            <summary>
            Adds an asset to the optimization pipeline.
            </summary>
            <param name="route">The route matching for the asset.</param>
            <param name="contentType">The content type of the response. Example: "text/css".</param>
            <param name="sourceFiles">A list of relative file names of the sources to optimize.</param>
        </member>
        <member name="M:WebOptimizer.IAssetPipeline.AddFiles(System.String,System.String[])">
            <summary>
            Adds an array of files to the optimization pipeline.
            </summary>
            <param name="contentType">The content type of the response. Example: text/css or text/javascript.</param>
            <param name="sourceFiles">A list of relative file names or globbing patterns of the sources to add.</param>
        </member>
        <member name="M:WebOptimizer.IAssetPipeline.TryGetAssetFromRoute(System.String,WebOptimizer.IAsset@)">
            <summary>
            Gets the <see cref="T:WebOptimizer.IAsset"/> from the specified route.
            </summary>
            <param name="route">The route to find the asset by.</param>
            <param name="asset">The asset matching the route.</param>
        </member>
        <member name="T:WebOptimizer.IAssetResponse">
            <summary>
            The response from building an asset.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAssetResponse.CacheKey">
            <summary>
            Gets the cache key.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAssetResponse.Body">
            <summary>
            Gets the content of the response.
            </summary>
        </member>
        <member name="P:WebOptimizer.IAssetResponse.Headers">
            <summary>
            Gets the HTTP headers.
            </summary>
        </member>
        <member name="M:WebOptimizer.IAssetResponseStore.AddAsync(System.String,System.String,WebOptimizer.AssetResponse)">
            <summary>
            Create or overwrite an entry in the cache.
            </summary>
            <param name="bucket"></param>
            <param name="cachekey"></param>
            <param name="assetResponse">An object identifying the entry.</param>
            <returns><code>true</code> if the entry was created; otherwise <code>false</code>.</returns>
        </member>
        <member name="M:WebOptimizer.IAssetResponseStore.RemoveAsync(System.String,System.String)">
            <summary>
            Remove an entry from the cache.
            </summary>
            <param name="bucket"></param>
            <param name="cachekey"></param>
        </member>
        <member name="M:WebOptimizer.IAssetResponseStore.TryGet(System.String,System.String,WebOptimizer.AssetResponse@)">
            <summary>
            Gets the <see cref="T:WebOptimizer.IAssetResponse"/> associated with <paramref name="cachekey"/> if present.
            </summary>
            <param name="bucket"></param>
            <param name="cachekey">A string identifying the requested entry.</param>
            <param name="assetResponse">The located value or null.</param>
            <returns><code>true</code> if the key was found; otherwise <code>false</code>.</returns>
        </member>
        <member name="T:WebOptimizer.IWebOptimizerOptions">
            <summary>
            Options for the Web Optimizer.
            </summary>
        </member>
        <member name="P:WebOptimizer.IWebOptimizerOptions.EnableCaching">
            <summary>
            Gets or sets a value indicating whether server-side caching is enabled.
            Default is <code>false</code> when running in a development environment.
            </summary>
        </member>
        <member name="P:WebOptimizer.IWebOptimizerOptions.EnableMemoryCache">
            <summary>
            Gets or sets a value indicating whether <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache"/> based caching is enabled.
            Default is <code>false</code> when running in a development environment.
            </summary>
        </member>
        <member name="P:WebOptimizer.IWebOptimizerOptions.EnableDiskCache">
            <summary>
            Gets or sets a value indicating whether disk based caching is enabled.
            Default is <code>false</code> when running in a development environment; 
            otherwise the default is <code>true</code>.
            </summary>
        </member>
        <member name="P:WebOptimizer.IWebOptimizerOptions.CacheDirectory">
            <summary>
            Gets or sets the directory where assets will be stored if <see cref="P:WebOptimizer.IWebOptimizerOptions.EnableDiskCache"/> is <code>true</code>.
            </summary>
        </member>
        <member name="P:WebOptimizer.IWebOptimizerOptions.EnableTagHelperBundling">
            <summary>
            Gets or sets whether bundling is enabled.
            </summary>
        </member>
        <member name="P:WebOptimizer.IWebOptimizerOptions.CdnUrl">
            <summary>
            Gets the CDN url used for TagHelpers.
            </summary>
        </member>
        <member name="T:WebOptimizer.IProcessor">
            <summary>
            An interface for post processors.
            </summary>
        </member>
        <member name="M:WebOptimizer.IProcessor.ExecuteAsync(WebOptimizer.IAssetContext)">
            <summary>
            Executes the processor on the specified configuration.
            </summary>
        </member>
        <member name="M:WebOptimizer.IProcessor.CacheKey(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the custom key that should be used when calculating the memory cache key.
            </summary>
        </member>
        <member name="T:WebOptimizer.Processor">
            <summary>
            A base class for processors
            </summary>
            <seealso cref="T:WebOptimizer.IProcessor" />
        </member>
        <member name="M:WebOptimizer.Processor.CacheKey(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the custom key that should be used when calculating the memory cache key.
            </summary>
        </member>
        <member name="M:WebOptimizer.Processor.ExecuteAsync(WebOptimizer.IAssetContext)">
            <summary>
            Executes the processor on the specified configuration.
            </summary>
        </member>
        <member name="T:WebOptimizer.Taghelpers.BaseTagHelper">
            <summary>
            A base class for TagHelpers
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper" />
        </member>
        <member name="M:WebOptimizer.Taghelpers.BaseTagHelper.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache,WebOptimizer.IAssetPipeline,Microsoft.Extensions.Options.IOptionsMonitor{WebOptimizer.WebOptimizerOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:WebOptimizer.Taghelpers.BaseTagHelper"/> class.
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.BaseTagHelper.HostingEnvironment">
            <summary>
            Gets the hosting environment.
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.BaseTagHelper.Cache">
            <summary>
            The cache object.
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.BaseTagHelper.Pipeline">
            <summary>
            Gets the pipeline.
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.BaseTagHelper.Options">
            <summary>
            Gets the options.
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.BaseTagHelper.Order">
            <summary>
            Makes sure this taghelper runs before the built in ones.
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.BaseTagHelper.ViewContext">
            <summary>
            Gets or sets the view context.
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.BaseTagHelper.GetQuote(Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle)">
            <summary>
            Gets the quote character.
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.BaseTagHelper.AddFileVersionToPath(System.String,WebOptimizer.IAsset)">
            <summary>
            Generates a has of the file.
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.BaseTagHelper.GenerateHash(WebOptimizer.IAsset)">
            <summary>
            Generates a has of the files in the bundle.
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.BaseTagHelper.AddToCache(System.String,System.String,Microsoft.Extensions.FileProviders.IFileProvider,System.String[])">
            <summary>
            Adds string value to memory cache.
            </summary>
        </member>
        <member name="T:WebOptimizer.Taghelpers.LinkInlineHrefTagHelper">
            <summary>
            Tag helper for inlining CSS
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.LinkInlineHrefTagHelper.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache,WebOptimizer.IAssetPipeline,Microsoft.Extensions.Options.IOptionsMonitor{WebOptimizer.WebOptimizerOptions},WebOptimizer.IAssetBuilder)">
            <summary>
            Tag helper for inlining content
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.LinkInlineHrefTagHelper.Order">
            <summary>
            Makes sure this taghelper runs before the built in ones.
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.LinkInlineHrefTagHelper.Href">
            <summary>
            Gets or sets the href attribute
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.LinkInlineHrefTagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Creates a tag helper for inlining content
            </summary>
        </member>
        <member name="T:WebOptimizer.Taghelpers.LinkTagHelper">
            <summary>
            A TagHelper for hooking CSS bundles up to the HTML page.
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.LinkTagHelper.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache,WebOptimizer.IAssetPipeline,Microsoft.Extensions.Options.IOptionsMonitor{WebOptimizer.WebOptimizerOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:WebOptimizer.Taghelpers.LinkTagHelper"/> class.
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.LinkTagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Synchronously executes the TagHelper
            </summary>
        </member>
        <member name="T:WebOptimizer.Taghelpers.ScriptInlineSrcTagHelper">
            <summary>
            Tag helper for inlining CSS
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.ScriptInlineSrcTagHelper.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache,WebOptimizer.IAssetPipeline,Microsoft.Extensions.Options.IOptionsMonitor{WebOptimizer.WebOptimizerOptions},WebOptimizer.IAssetBuilder)">
            <summary>
            Tag helper for inlining content
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.ScriptInlineSrcTagHelper.Order">
            <summary>
            Makes sure this taghelper runs before the built in ones.
            </summary>
        </member>
        <member name="P:WebOptimizer.Taghelpers.ScriptInlineSrcTagHelper.Src">
            <summary>
            Gets or sets the src attribute
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.ScriptInlineSrcTagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Creates a tag helper for inlining content
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.ScriptInlineSrcTagHelper.GetFileContentAsync(System.String)">
            <summary>
            Gets the file content asynchronous.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">File or bundle doesn't exist</exception>
        </member>
        <member name="T:WebOptimizer.Taghelpers.ScriptTagHelper">
            <summary>
            A TagHelper for hooking JavaScript bundles up to the HTML page.
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.ScriptTagHelper.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache,WebOptimizer.IAssetPipeline,Microsoft.Extensions.Options.IOptionsMonitor{WebOptimizer.WebOptimizerOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:WebOptimizer.Taghelpers.ScriptTagHelper"/> class.
            </summary>
        </member>
        <member name="M:WebOptimizer.Taghelpers.ScriptTagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Synchronously executes the TagHelper
            </summary>
        </member>
        <member name="M:WebOptimizer.TagHelpersDynamic.Helpers.GenerateHash(WebOptimizer.IAsset,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Generates a has of the files in the bundle.
            </summary>
        </member>
        <member name="T:WebOptimizer.TagHelpersDynamic.LinkTagHelper">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper"/> implementation targeting &lt;link&gt; elements that supports fallback href paths.
            </summary>
            <remarks>
            The tag helper won't process for cases with just the 'href' attribute.
            </remarks>
        </member>
        <member name="P:WebOptimizer.TagHelpersDynamic.LinkTagHelper.BundleKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebOptimizer.TagHelpersDynamic.LinkTagHelper.BundleDestinationKey">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebOptimizer.TagHelpersDynamic.LinkTagHelper.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Text.Encodings.Web.HtmlEncoder,System.Text.Encodings.Web.JavaScriptEncoder,Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory,System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:WebOptimizer.TagHelpersDynamic.LinkTagHelper"/>.
            </summary>
            <param name="hostingEnvironment">The <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/>.</param>
            <param name="cache">The <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache"/>.</param>
            <param name="htmlEncoder">The <see cref="T:System.Text.Encodings.Web.HtmlEncoder"/>.</param>
            <param name="javaScriptEncoder">The <see cref="T:System.Text.Encodings.Web.JavaScriptEncoder"/>.</param>
            <param name="urlHelperFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory"/>.</param>
        </member>
        <member name="M:WebOptimizer.TagHelpersDynamic.LinkTagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <inheritdoc />
        </member>
        <member name="T:WebOptimizer.TagHelpersDynamic.ScriptTagHelper">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper"/> implementation targeting &lt;script&gt; elements that supports fallback src paths.
            </summary>
            <remarks>
            The tag helper won't process for cases with just the 'src' attribute.
            </remarks>
        </member>
        <member name="P:WebOptimizer.TagHelpersDynamic.ScriptTagHelper.BundleKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebOptimizer.TagHelpersDynamic.ScriptTagHelper.BundleDestinationKey">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebOptimizer.TagHelpersDynamic.ScriptTagHelper.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Text.Encodings.Web.HtmlEncoder,System.Text.Encodings.Web.JavaScriptEncoder,Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory,System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:WebOptimizer.TagHelpersDynamic.ScriptTagHelper"/>.
            </summary>
            <param name="hostingEnvironment">The <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/>.</param>
            <param name="cache">The <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache"/>.</param>
            <param name="htmlEncoder">The <see cref="T:System.Text.Encodings.Web.HtmlEncoder"/>.</param>
            <param name="javaScriptEncoder">The <see cref="T:System.Text.Encodings.Web.JavaScriptEncoder"/>.</param>
            <param name="urlHelperFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory"/>.</param>
        </member>
        <member name="M:WebOptimizer.TagHelpersDynamic.ScriptTagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <inheritdoc />
        </member>
        <member name="T:WebOptimizer.WebOptimizerOptions">
            <summary>
            Options for the Web Optimizer.
            </summary>
        </member>
        <member name="P:WebOptimizer.WebOptimizerOptions.EnableCaching">
            <summary>
            Gets or sets a value indicating whether server-side caching is enabled.
            Default is <code>false</code> when running in a development environment.
            </summary>
        </member>
        <member name="P:WebOptimizer.WebOptimizerOptions.EnableMemoryCache">
            <summary>
            Gets or sets a value indicating whether <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache"/> based caching is enabled.
            Default is <code>true</code>.
            </summary>
        </member>
        <member name="P:WebOptimizer.WebOptimizerOptions.EnableDiskCache">
            <summary>
            Gets or sets a value indicating whether disk based caching is enabled.
            Default is <code>false</code> when running in a development environment; 
            otherwise the default is <code>true</code>.
            </summary>
        </member>
        <member name="P:WebOptimizer.WebOptimizerOptions.EnableTagHelperBundling">
            <summary>
            Gets or sets whether bundling is enabled.
            </summary>
        </member>
        <member name="P:WebOptimizer.WebOptimizerOptions.CdnUrl">
            <summary>
            Gets the CDN url used for TagHelpers.
            </summary>
        </member>
        <member name="P:WebOptimizer.WebOptimizerOptions.CacheDirectory">
            <summary>
            Gets or sets the directory where assets will be stored if <see cref="P:WebOptimizer.WebOptimizerOptions.EnableDiskCache"/> is <code>true</code>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseWebOptimizer(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,WebOptimizer.FileProviderOptions[])">
            <summary>
            Adds WebOptimizer to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> request execution pipeline
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseWebOptimizer(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds WebOptimizer to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> request execution pipeline
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceExtensions">
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceExtensions.AddWebOptimizer(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.DependencyInjection.CssBundlingSettings,Microsoft.Extensions.DependencyInjection.CodeBundlingSettings,System.Action{WebOptimizer.IAssetPipeline})">
            <summary>
            Adds WebOptimizer to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> and enables CSS and JavaScript minification.
            </summary>
            <param name="services">The service collection.</param>
            <param name="env"></param>
            <param name="cssBundlingSettings"></param>
            <param name="codeBundlingSettings"></param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceExtensions.AddWebOptimizer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Boolean)">
            <summary>
            Adds WebOptimizer to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> and enables CSS and JavaScript minification.
            </summary>
            <param name="services">The service collection.</param>
            <param name="minifyJavaScript">If <code>true</code>; calls <code>AddJs()</code> on the pipeline.</param>
            <param name="minifyCss">If <code>true</code>; calls <code>AddCss()</code> on the pipeline.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceExtensions.AddWebOptimizer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{WebOptimizer.IAssetPipeline})">
            <summary>
            Adds WebOptimizer to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions">
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
            <summary>
            Extension methods for <see cref="T:WebOptimizer.IAssetPipeline"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.Concatenate(WebOptimizer.IAsset)">
            <summary>
            Adds the string content of all source files to the pipeline.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.Concatenate(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset})">
            <summary>
            Adds the string content of all source files to the pipeline.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.FingerprintUrls(WebOptimizer.IAsset)">
            <summary>
            Adds a fingerprint to local url() references.
            NOTE: Make sure to call Concatinate() before this method
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.FingerprintUrls(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset})">
            <summary>
            Adds a fingerprint to local url() references.
            NOTE: Make sure to call Concatinate() before this method
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.InlineImages(WebOptimizer.IAsset,System.Int32)">
            <summary>
            Inlines url() references as base64 encoded strings if the image size is below <paramref name="maxFileSize"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.InlineImages(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset},System.Int32)">
            <summary>
            Adds a fingerprint to local url() references.
            NOTE: Make sure to call Concatinate() before this method
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyCssFiles(WebOptimizer.IAssetPipeline)">
            <summary>
            Minifies any .css file requested.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyCssFiles(WebOptimizer.IAssetPipeline,NUglify.Css.CssSettings)">
            <summary>
            Minifies any .css file requested.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyCssFiles(WebOptimizer.IAssetPipeline,System.String[])">
            <summary>
            Minifies the specified .css files.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyCssFiles(WebOptimizer.IAssetPipeline,NUglify.Css.CssSettings,System.String[])">
            <summary>
            Minifies the specified .css files.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AddCssBundle(WebOptimizer.IAssetPipeline,System.String,System.String[])">
            <summary>
            Creates a CSS bundle on the specified route and minifies the output.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AddCssBundle(WebOptimizer.IAssetPipeline,System.String,NUglify.Css.CssSettings,System.String[])">
            <summary>
            Creates a CSS bundle on the specified route and minifies the output.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyCss(WebOptimizer.IAsset)">
            <summary>
            Runs the CSS minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyCss(WebOptimizer.IAsset,NUglify.Css.CssSettings)">
            <summary>
            Runs the CSS minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyCss(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset})">
            <summary>
            Runs the CSS minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyCss(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset},NUglify.Css.CssSettings)">
            <summary>
            Runs the CSS minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.EnforceFileExtensions(WebOptimizer.IAsset,System.String[])">
            <summary>
            Throws an exception if any file doesn't match one of the specified file extensions.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.EnforceFileExtensions(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset},System.String[])">
            <summary>
            Throws an exception if any file doesn't match one of the specified file extensions.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyHtmlFiles(WebOptimizer.IAssetPipeline)">
            <summary>
            Minifies any .html file requested.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyHtmlFiles(WebOptimizer.IAssetPipeline,NUglify.Html.HtmlSettings)">
            <summary>
            Minifies any .html file requested.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyHtmlFiles(WebOptimizer.IAssetPipeline,System.String[])">
            <summary>
            Minifies the specified .html files.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyHtmlFiles(WebOptimizer.IAssetPipeline,NUglify.Html.HtmlSettings,System.String[])">
            <summary>
            Minifies the specified .html files.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AddHtmlBundle(WebOptimizer.IAssetPipeline,System.String,System.String[])">
            <summary>
            Creates a HTML bundle on the specified route and minifies the output.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AddHtmlBundle(WebOptimizer.IAssetPipeline,System.String,NUglify.Html.HtmlSettings,System.String[])">
            <summary>
            Creates a HTML bundle on the specified route and minifies the output.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyHtml(WebOptimizer.IAsset)">
            <summary>
            Runs the HTML minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyHtml(WebOptimizer.IAsset,NUglify.Html.HtmlSettings)">
            <summary>
            Runs the HTML minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyHtml(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset})">
            <summary>
            Runs the HTML minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyHtml(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset},NUglify.Html.HtmlSettings)">
            <summary>
            Runs the HTML minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyJsFiles(WebOptimizer.IAssetPipeline)">
            <summary>
            Minifies any .js file requested.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyJsFiles(WebOptimizer.IAssetPipeline,NUglify.JavaScript.CodeSettings)">
            <summary>
            Minifies any .js file requested.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyJsFiles(WebOptimizer.IAssetPipeline,System.String[])">
            <summary>
            Minifies the specified .js files.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyJsFiles(WebOptimizer.IAssetPipeline,NUglify.JavaScript.CodeSettings,System.String[])">
            <summary>
            Minifies tje specified .js files.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AddJavaScriptBundle(WebOptimizer.IAssetPipeline,System.String,System.String[])">
            <summary>
            Creates a JavaScript bundle on the specified route and minifies the output.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AddJavaScriptBundle(WebOptimizer.IAssetPipeline,System.String,NUglify.JavaScript.CodeSettings,System.String[])">
            <summary>
            Creates a JavaScript bundle on the specified route and minifies the output.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyJavaScript(WebOptimizer.IAsset)">
            <summary>
            Runs the JavaScript minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyJavaScript(WebOptimizer.IAsset,NUglify.JavaScript.CodeSettings)">
            <summary>
            Runs the JavaScript minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyJavaScript(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset})">
            <summary>
            Runs the JavaScript minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.MinifyJavaScript(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset},NUglify.JavaScript.CodeSettings)">
            <summary>
            Runs the JavaScript minifier on the content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AdjustRelativePaths(WebOptimizer.IAsset)">
            <summary>
            Adjusts the relative paths in CSS documents.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AdjustRelativePaths(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset})">
            <summary>
            Adjusts the relative paths in CSS documents.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AddResponseHeader(WebOptimizer.IAsset,System.String,System.String)">
            <summary>
            Adds a fingerprint to local url() references.
            NOTE: Make sure to call Concatinate() before this method
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.AddResponseHeader(System.Collections.Generic.IEnumerable{WebOptimizer.IAsset},System.String,System.String)">
            <summary>
            Adds a fingerprint to local url() references.
            NOTE: Make sure to call Concatinate() before this method
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.UseContentRoot(WebOptimizer.IAsset)">
            <summary>
            Uses the content root folder (usually the project root) instead of the wwwroot.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AssetPipelineExtensions.UseFileProvider(WebOptimizer.IAsset,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>
            Uses the specified <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider"/> to locate the source files.
            </summary>
        </member>
    </members>
</doc>
