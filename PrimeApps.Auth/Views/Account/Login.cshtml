@model LoginViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@*{
	ViewBag.Title = "Login";
	Layout = "~/Views/Shared/_LayoutAuth.cshtml";

	var app = "primeapps";
	var logo = "";
	var customDomain = false;
	string customLanguage = null;

	if (ViewBag.AppInfo != null)
	{
		logo = ViewBag.AppInfo["logo"].Value;
		app = ViewBag.AppInfo["app"].Value;
		ViewBag.Title = ViewBag.AppInfo["title"].Value;
		customDomain = ViewBag.AppInfo["customDomain"] != null ? ViewBag.AppInfo["customDomain"].Value : false;
		customLanguage = !string.IsNullOrWhiteSpace(ViewBag.AppInfo["language"].Value) ? ViewBag.AppInfo["language"].Value : string.Empty;
	}
	var otherLang = ViewBag.Lang == "tr" ? "en" : "tr";
	var error = ViewBag.Error;
}
<div class="col-md-4 login-sec">
	<img class="logo-img" src="@logo" />
	@if (!customDomain)
	{
		<span class="free-info-header">
			@Html.Raw(string.Format(Localizer["LoginRegisterInfo"].Value, "<a href=" + @Url.Action("Register", "Auth", new { ReturnUrl = ViewBag.ReturnUrl }) + ">" + Localizer["LoginRegisterInfoLink"].Value + "</a>"))
		</span>
	}

	<form asp-route="Login" asp-route-returnurl="@ViewBag.ReturnUrl" method="post" class="login-form" role="form" id="login-form">
		<input type="hidden" asp-for="ReturnUrl" />
		<div class="form-group">
			<div class="input-group input-group-first">
				<span class="input-group-addon">
					<span class="flaticon-email26"></span>
				</span>
				<!--<label for="exampleInputEmail1" class="text-uppercase">E-Posta</label>-->
				<input class="form-control" placeholder="@Localizer["Email"]" asp-for="Username" autofocus>
			</div>
		</div>
		<div class="form-group">
			<div class="input-group">
				<span class="input-group-addon">
					<span class="flaticon-padlock50"></span>
				</span>
				<!--<label for="exampleInputEmail1" class="text-uppercase">E-Posta</label>-->
				<input type="password" class="form-control" placeholder="@Localizer["Password"]" asp-for="Password" autocomplete="off">
			</div>
		</div>
		<div class="form-check">
			<button type="submit" class="btn btn-login btn-block ladda-button" data-style="slide-right" tabindex="3">@Localizer["LoginButton"]</button>
			@if (!customDomain)
			{
				<hr />
				<button type="button" onclick="location.href = '@Url.Action("SignInAd", "Auth")'" class="btn btn-block office-button">@Localizer["SignWithOffice"]</button>
			}
			<div class="language">
				@if (otherLang == "tr" && string.IsNullOrEmpty(customLanguage))
				{
					<a href="@Url.Action("Login", "Auth", new {ReturnUrl = ViewBag.ReturnUrl, Language = otherLang})">@Localizer["TR"]</a> <span>|</span>
				}
				else if (otherLang == "en" && string.IsNullOrEmpty(customLanguage))
				{
					<a href="@Url.Action("Login", "Auth", new {ReturnUrl = ViewBag.ReturnUrl, Language = otherLang})">@Localizer["EN"]</a> <span>|</span>
				}
				<a href="@Url.Action("ForgotPassword", "Auth", new {ReturnUrl = ViewBag.ReturnUrl, Email = Model != null ? Model.Username : ""})" class="">@Localizer["ForgotPassword"]</a>
			</div>
		</div>
	</form>
</div>
	*@
<div class="login-page">
		<div class="page-header">
			<h1>Login</h1>
		</div>

		<partial name="_ValidationSummary" />

		<div class="row">
			@ViewBag.AppInfo["name"]
			@if (Model.EnableLocalLogin)
			{
				<div class="col-sm-6">
					<div class="panel panel-default">
						<div class="panel-heading">
							<h3 class="panel-title">Local Login</h3>
						</div>
						<div class="panel-body">

							<form asp-route="Login">
								<input type="hidden" asp-for="ReturnUrl" />

								<fieldset>
									<div class="form-group">
										<label asp-for="Username"></label>
										<input class="form-control" placeholder="Username" asp-for="Username" autofocus>
									</div>
									<div class="form-group">
										<label asp-for="Password"></label>
										<input type="password" class="form-control" placeholder="Password" asp-for="Password" autocomplete="off">
									</div>
									@if (Model.AllowRememberLogin)
									{
										<div class="form-group login-remember">
											<label asp-for="RememberLogin">
												<input asp-for="RememberLogin">
												<strong>Remember My Login</strong>
											</label>
										</div>
									}

									<div>
										<p>The default users are alice/bob, password: Pass123$</p>
									</div>

									<div class="form-group">
										<button class="btn btn-primary" name="button" value="login">Login</button>
										<button class="btn btn-default" name="button" value="cancel">Cancel</button>
									</div>
								</fieldset>
							</form>
						</div>
					</div>
				</div>
			}

			@if (Model.VisibleExternalProviders.Any())
			{
				<div class="col-md-6 col-sm-6 external-providers">
					<div class="panel panel-default">
						<div class="panel-heading">
							<h3 class="panel-title">External Login</h3>
						</div>
						<div class="panel-body">
							<ul class="list-inline">
								@foreach (var provider in Model.VisibleExternalProviders)
								{
									<li>
										<a class="btn btn-default"
										   asp-action="ExternalLogin"
										   asp-route-provider="@provider.AuthenticationScheme"
										   asp-route-returnUrl="@Model.ReturnUrl">
											@provider.DisplayName
										</a>
									</li>
								}
							</ul>
						</div>
					</div>
				</div>
			}

			@if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
			{
				<div class="alert alert-warning">
					<strong>Invalid login request</strong>
					There are no login schemes configured for this client.
				</div>
			}
		</div>
	</div>