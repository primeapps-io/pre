@model ForgotPasswordViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    Layout = "~/Views/Shared/_LayoutAuth.cshtml";
    ViewBag.Title = Model.ApplicationInfo.Title;

    var path = Context.Request.Path.Value + Context.Request.QueryString.Value;
    ViewBag.Title = Model.ApplicationInfo.Title;
    var multiLanguage = Model.ApplicationInfo.MultiLanguage;
    var otherLang = Model.ApplicationInfo.Language == "tr" ? "en" : "tr";
    var preview = Context.Request.QueryString.Value.Contains("primeapps_preview") ? true : false;
}

<div class="col-md-4 login-sec">
    <img class="logo-img" src="@Model.ApplicationInfo.Logo"/>
    <form asp-route="ForgotPassword" class="login-form" role="form" id="forgot-form">
        <input type="hidden" asp-for="@Model.ReturnUrl"/>
        <div class="form-group">
            <div class="input-group input-group-first">
                <span class="input-group-addon">
                    <span class="flaticon-email26"></span>
                </span>
                <!--<label for="exampleInputEmail1" class="text-uppercase">E-Posta</label>-->
                <input class="form-control" placeholder="@Localizer["Email"]" asp-for="Email" id="Email" autofocus autocomplete="off">
            </div>
        </div>
        @if (!string.IsNullOrWhiteSpace(Model.Error))
        {
            if (Model.Error == "InvalidEmail")
            {
                <div class="error">@Localizer["InvalidEmail"]</div>
            }

            else if (Model.Error == "ForgotNotFound")
            {
                <div class="error">@Localizer["ForgotNotFound"]</div>
            }
            else if (Model.Error == "NotSendEmail")
            {
                <div class="error">@Localizer["NotSendEmail"]</div>
            }
            else
            {
                <div class="error">@Localizer["InvalidEmail"]</div>
            }
        }
        <div class="error-email"></div>
        <div class="form-check">
            <button type="submit" class="btn btn-login btn-block ladda-button" data-style="slide-right">@Localizer["Send"]</button>

            <div class="language">
                @if (multiLanguage && !preview)
                {
                    if (otherLang == "tr")
                    {
                        <a href="@Url.Action("ChangeLanguage", "Account", new {language = "tr", ReturnUrl = path})">@Localizer["TR"]</a>
                        <span>|</span>
                    }
                    else if (otherLang == "en")
                    {
                        <a href="@Url.Action("ChangeLanguage", "Account", new {language = "en", ReturnUrl = path})">@Localizer["EN"]</a>
                        <span>|</span>
                    }
                }
                <a href="@Url.Action("Login", "Account", new {ReturnUrl = Model.ReturnUrl, Email = Model != null ? Model.Email : ""})" class="">@Localizer["ReturnInfo"]</a>
            </div>
        </div>
    </form>
    <span class="free-info">
        @if (!string.IsNullOrWhiteSpace(Model.Success))
        {
            @Localizer["ForgotPasswordSuccess"]
        }
        else
        {
            @Localizer["ForgotInfo"]
        }
    </span>
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function() {

            if ("@Model.Success" === "Success") {
                swal({
                    title: "@Localizer["ForgotPasswordSuccessTitle"]",
                    text: "@Localizer["ForgotPasswordSuccess"]",
                    type: "success",
                    button: "@Localizer["Ok"]",
                });
            }

            var postTry = false;
            $("#Email").keyup(function() {
                if (postTry) {
                    emailValidator();
                }
            });

            $(".btn-login").click(function(e) {
                postTry = true;
                removeFieldErrors();
                var l = Ladda.create(this);
                l.start();
                if (!emailValidator()) {
                    e.stopPropagation();
                    e.preventDefault();
                    l.stop();
                } else {
                    $("#forgot-form").submit();
                }
            });

            function emailValidator() {
                var isValid = true;
                var fieldValue = $("#Email").val().toLowerCase().replace(/\ /g, "");
                var result = /^[a-z0-9._%+-]+@@[a-z0-9.-]+$/.test(fieldValue);
                if (!result) {
                    $(".error-email").addClass("error");
                    $(".error-email").text("@Localizer["InvalidEmail"]");
                    isValid = false;
                } else {
                    $(".error-email").removeClass("error");
                    $(".error-email").text("");
                }
                return isValid;
            }

            function removeFieldErrors() {
                $(".error-email").removeClass("error");
                $(".error-email").text("");
                $(".error").text("");
            }

            $("input").focus(function(e) {
                $(e.target).closest(".input-group").addClass("input-focus");
            });

            $("input").blur(function(e) {
                $(e.target).closest(".input-group").removeClass("input-focus");
            });
        });
    </script>
}

@*section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}*@